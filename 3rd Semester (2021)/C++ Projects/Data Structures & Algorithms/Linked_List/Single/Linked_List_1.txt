#include <iostream>
using namespace std;

struct Node
{
int m_Data;
	Node* m_Next;

	Node(int&  i) : m_Data(i), m_Next(nullptr) {}
	Node(int&& i) : m_Data(i), m_Next(nullptr) {}
};

class Linked_List
{
	Node* m_Head;		// For Keeping Track
	Node* m_Tail;		// For adding new element in the List

public:

	Linked_List() : m_Head(nullptr), m_Tail(nullptr) {}

	void add(int i)
	{
		// Making a new Node with the Parameter provided
		// -----------------

			Node* new_Node = new Node(i);


		if (m_Head == nullptr)
		{
			// Declaring it as Head and Tail
			// -----------------

				m_Head = new_Node;
				m_Tail = new_Node;

			// Flushing new_Node
			// -----------------

				new_Node = nullptr;
		}
		else
		{
			// Declaring it as Head and Tail
			// -----------------

				(*m_Tail).m_Next = new_Node;
				m_Tail = new_Node;

			// Flushing new_Node
			// -----------------

				new_Node = nullptr;
		}
	}

	void Print_All()
	{
		Node* it = m_Head;
		while (it != nullptr)
		{
			cout << "Data : " << it->m_Data << endl;
			it = it->m_Next;
		}
	}
};




int main()
{
	Linked_List L;
	L.add(5);
	L.add(3);
	L.add(6);
	L.add(2);
	L.add(4);
	L.Print_All();
}