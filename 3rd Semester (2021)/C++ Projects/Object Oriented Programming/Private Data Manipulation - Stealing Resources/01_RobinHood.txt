#include <iostream>
using namespace std;

class Private_Data
{
	int x, y;

public:

	Private_Data() : x(10), y(20) {}

	const int& Get_X()
	{
		return x;
	}

	const int& Get_Y()
	{
		return y;
	}
};

class Grabber
{
	int x, y;

public:

	Grabber() : x(0), y(0) {}

	int& operator[] (int&& index)
	{
		return *(int*)((char*)this + index * 4);
	}
};

int main()
{
	// Initialization
	// --------------

		Private_Data P;
		Grabber& G = *(Grabber*)&P;

	// Verification
	// --------------

		cout << "Verification" << endl;
		cout << "------------" << endl;
		cout << "Address of Private_Data : [ " << &P << " ]" << endl;
		cout << "Address of Grabber      : [ " << &G << " ]" << endl;
		cout << endl;

	// Checking if Grabber got the right Data
	// --------------

		cout << "Element Test #1" << endl;
		cout << "---------------" << endl;
		cout << "1st Element of Grabber  : [ " << G[0] << " ]" << endl;
		cout << "2nd Element of Grabber  : [ " << G[1] << " ]" << endl;
		cout << endl;

		cout << "1st Element of Private_Data  : [ " << P.Get_X() << " ]" << endl;
		cout << "2nd Element of Private_Data  : [ " << P.Get_Y() << " ]" << endl;
		cout << endl;

	// Manipulating the Grabber Data
	// --------------

		G[0] = 77;
		G[1] = 777;

	// Checking if we did the right thing
	// --------------

		cout << "Element Test #2" << endl;
		cout << "---------------" << endl;
		cout << "1st Element of Grabber  : [ " << G[0] << " ]" << endl;
		cout << "2nd Element of Grabber  : [ " << G[1] << " ]" << endl;
		cout << endl;

		cout << "1st Element of Private_Data  : [ " << P.Get_X() << " ]" << endl;
		cout << "2nd Element of Private_Data  : [ " << P.Get_Y() << " ]" << endl;
		cout << endl;

	// Verification
	// --------------

		cout << "Verification" << endl;
		cout << "------------" << endl;
		cout << "Address of Private_Data : [ " << &P << " ]" << endl;
		cout << "Address of Grabber      : [ " << &G << " ]" << endl;
		cout << endl;
}