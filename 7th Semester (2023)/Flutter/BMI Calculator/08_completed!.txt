import 'dart:math';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
class My {
  static const dummy = Text("");
  static const title = "BMI Calculator";

  static const color_blue = Color(0xFF0a0d22);
  static const color_snow = Colors.white;
  static const color_pink = Color(0xFFeb1555);

  static var color_active_not = color_snow.withOpacity(0.03);
  static var color_active = color_snow.withOpacity(0.09);

  static const flex_more = 40;
  static const flex_less = 100;

  static text_normal(String text) => Text(text, style: GoogleFonts.montserrat(
    fontSize: 20,
    color: color_snow.withOpacity(0.7),
  ));
  static text_bolded(String text) => Text(text, style: GoogleFonts.openSans(
    fontSize: 60,
    fontWeight: FontWeight.w800,
    height: 1,
  ));
}

void main() => runApp(MaterialApp(
  title: My.title,
  theme: ThemeData.dark().copyWith(
    scaffoldBackgroundColor: My.color_blue,
    appBarTheme: const AppBarTheme(
      backgroundColor: My.color_blue,
      centerTitle: true,
      toolbarHeight: 70,
      elevation: 17,
    )
  ),
  home: Scaffold(
    appBar: AppBar(
      title: const Text(My.title),
      leading: const Icon(Icons.menu),
    ),
    body: const Padding(
      padding: EdgeInsets.all(15.0),
      child: MyPage(),
    ),
  ),
));

class MyPage extends StatefulWidget {
  const MyPage({Key? key}) : super(key: key);

  @override
  State<MyPage> createState() => _MyPageState();
}

class _MyPageState extends State<MyPage> {
  Color color_m = My.color_active;
  Color color_f = My.color_active_not;
  int heightVal = 180;
  int weightVal = 60;
  int age_value = 20;

  swap() => setState(() {
    final t = color_m;
    color_m = color_f;
    color_f = t;
  });
  new_height(double v) => setState(() => heightVal = v.round());
  increment(bool isWeight) => () => setState(() => isWeight ? weightVal++ : age_value++);
  decrement(bool isWeight) => () => setState(() => isWeight ? weightVal-- : age_value--);

  makeIconBox(Color color, IconData icon, String title) => Expanded(
    child: GestureDetector(
      onTap: swap,
      child: TheBox(
        isExpanded: false,
        color: color,
        children: [
          Flexible(flex: 2, child: Icon(icon, size: 130)),
          Flexible(flex: 1, child: My.text_normal(title)),
        ],
      ),
    ),
  );
  makeLastBox(String title, String value, bool isWeight) => TheBox(
    color: My.color_active,
    alignment: MainAxisAlignment.spaceEvenly,
    children: [
      My.text_normal(title),
      My.text_bolded(value),
      Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          makeModifier(Icons.remove, decrement(isWeight)),
          makeModifier(Icons.add, increment(isWeight)),
        ],
      ),
    ],
  );
  makeModifier(IconData icon, VoidCallback func) => TextButton(
    onPressed: func,
    style: TextButton.styleFrom(
      shape: const CircleBorder(),
      padding: const EdgeInsets.all(20),
      backgroundColor: My.color_active,
      foregroundColor: My.color_snow,
      elevation: 0,
    ),
    child: Icon(icon, size: 30),
  );
  makeResults() {
    final the_bmi = weightVal / (pow(heightVal / 100, 2));
    String the_statement = "";
    Color the_color = Colors.black;

    if (the_bmi > 30) {
      the_statement = "Obese";
      the_color = My.color_pink;
    }
    else if (the_bmi > 24) {
      the_statement = "Overweight";
      the_color = Colors.amber;
    }
    else if (the_bmi > 18) {
      the_statement = "Normal";
      the_color = Colors.green;
    }
    else {
      the_statement = "Underweight";
      the_color = Colors.cyan;
    }

    return Results(
        my_bmi: the_bmi,
        my_statement: the_statement,
        my_color: the_color,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Expanded(
          flex: My.flex_less,
          child: Row(
            children: [
              makeIconBox(color_m, Icons.male, "Male"),
              makeIconBox(color_f, Icons.female, "Female"),
            ],
          ),
        ), // Stage 1 - The Icon Box
        Expanded(
          flex: My.flex_less,
          child: TheBox(
            isExpanded: false,
            color: My.color_active,
            alignment: MainAxisAlignment.spaceEvenly,
            children: [
              My.text_normal("Height"),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.baseline,
                textBaseline: TextBaseline.alphabetic,
                children: [
                  My.text_bolded(heightVal.toString()),
                  My.text_normal("cm"),
                ],
              ),
              Slider(
                value: heightVal.toDouble(),
                onChanged: new_height,
                min: 120, max: 220,
                activeColor: My.color_pink,
                inactiveColor: My.color_active,
              )
            ],
          ),
        ), // Stage 2 - The Slider
        Expanded(
          flex: My.flex_less,
          child: Row(
            children: [
              makeLastBox("Weight", weightVal.toString(), true),
              makeLastBox("Age", age_value.toString(), false),
            ],
          ),
        ), // Stage 3 - The Last Box
        TheLastButton(
          title: "Calculate",
          onPressed: () => Navigator.push(
              context,
              MaterialPageRoute(builder: (unused) => makeResults())
          ),
        ), // Stage 4 - Moving On
      ],
    );
  }
}

class Results extends StatelessWidget {
  const Results({
    required this.my_bmi,
    required this.my_statement,
    required this.my_color,
    Key? key
  }) : super(key: key);

  final double my_bmi;
  final String my_statement;
  final Color my_color;

  @override
  Widget build(BuildContext context) => Scaffold(
    appBar: AppBar(
      title: const Text("BMI Calculator"),
      centerTitle: true,
    ),
    body: Padding(
      padding: const EdgeInsets.all(15.0),
      child: Column(
        children: [
          const Text(
            "The Results",
            style: TextStyle(
              fontSize: 60,
              fontWeight: FontWeight.w500,
            ),
          ),
          Expanded(
            flex: My.flex_less + 150,
            child: TheBox(
              isExpanded: false,
              alignment: MainAxisAlignment.spaceEvenly,
              color: My.color_active,
              children: [
                My.text_normal("Your BMI Index"),
                Text(
                  my_bmi.toStringAsFixed(1),
                  style: GoogleFonts.openSans(
                    fontSize: 150,
                    fontWeight: FontWeight.w700
                  ),
                ),
                Text(
                  my_statement,
                  style: GoogleFonts.montserrat(
                      fontSize: 30,
                      fontWeight: FontWeight.w600,
                      color: my_color
                  ),
                )
              ],
            ),
          ),
          TheLastButton(
            title: "Re-Calculate",
            onPressed: () => Navigator.pop(context),
          ),
        ],
      ),
    ),
  );
}


class TheLastButton extends StatelessWidget {
  const TheLastButton({
    required this.title,
    required this.onPressed,
    Key? key
  }) : super(key: key);

  final String title;
  final VoidCallback onPressed;

  @override
  Widget build(BuildContext context) {
    return Expanded(
      flex: My.flex_more,
      child: GestureDetector(
        onTap: onPressed,
        child: TheBox(
          isExpanded: false,
          children: [
            Text(
              title,
              style: GoogleFonts.dmSans(
                fontSize: 23,
                fontWeight: FontWeight.w600,
                letterSpacing: 0.5,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class TheBox extends StatelessWidget {
  const TheBox({
    this.color = My.color_pink,
    this.alignment = MainAxisAlignment.center,
    this.isExpanded = true,
    required this.children,
    Key? key,
  }) : super(key: key);

  final Color color;
  final MainAxisAlignment alignment;
  final List<Widget> children;
  final bool isExpanded;

  @override
  Widget build(BuildContext context) {
    final myBox = Container(
      alignment: Alignment.center,
      margin: const EdgeInsets.all(15),
      decoration: BoxDecoration(
        color: color,
        borderRadius: BorderRadius.circular(15),
      ),
      child: Column(
        mainAxisAlignment: alignment,
        children: children,
      ),
    );

    return isExpanded ? Expanded(
      child: myBox,
    ) : myBox;
  }
}