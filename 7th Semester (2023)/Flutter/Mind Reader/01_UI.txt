import 'package:flutter/material.dart';

class My {
  static const title = "Mind Reader";
  static const box_dim = 220.0;
  static const box_crv = 15.0;
  static const color_p = Color(0xFF0a0d22);
  static const color_s = Colors.white;
  static const color_a = Color(0xFFafe274);
}

void main() => runApp(MaterialApp(
  title: My.title,
  theme: ThemeData.dark().copyWith(
    scaffoldBackgroundColor: My.color_p,
    backgroundColor: My.color_s,
    appBarTheme: const AppBarTheme(
      backgroundColor: My.color_p,
      centerTitle: true,
      toolbarHeight: 70,
      elevation: 17,
    ),
  ),
  home: Scaffold(
    appBar: AppBar(
      title: const Text(My.title),
      leading: const Icon(Icons.gamepad),
    ),
    body: const Center(
      child: MyPage(),
    ),
  )
));

class MyPage extends StatefulWidget {
  const MyPage({Key? key}) : super(key: key);
  @override
  State<MyPage> createState() => _MyPageState();
}

class _MyPageState extends State<MyPage> {

  int my_number = 47;

  increment() => setState(() => my_number++);
  decrement() => setState(() => my_number--);
  makeArrow(IconData icon, VoidCallback fun, {double left = 0, double right = 0}) => GestureDetector(
    onTap: fun,
    child: MyBox(
      height: My.box_dim,
      width: My.box_dim / 2,
      left: left, right: right,
      child: Icon(icon, size: 60),
    ),
  );
  
  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        makeArrow(Icons.arrow_back_ios_new, decrement, left: My.box_crv),
        MyBox(
          child: Text(
            my_number.toString(),
            style: const TextStyle(
              fontSize: 100,
              fontWeight: FontWeight.w700,
              color: My.color_a
            ),
          ),
        ),
        makeArrow(Icons.arrow_forward_ios, increment, right: My.box_crv),
      ],
    );
  }
}

class MyBox extends StatelessWidget {
  const MyBox({
    this.left = 0,
    this.right = 0,
    this.width = My.box_dim,
    this.height = My.box_dim,
    required this.child,
    Key? key
  }) : super(key: key);

  final double left;
  final double right;
  final double width;
  final double height;
  final Widget child;

  @override
  Widget build(BuildContext context) {
    return Container(
      width: width, height: height,
      margin: const EdgeInsets.all(6),
      alignment: Alignment.center,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.horizontal(
            right: Radius.circular(right),
            left: Radius.circular(left),
        ),
        color: My.color_s.withOpacity(0.1),
      ),
      child: child,
    );
  }
}
