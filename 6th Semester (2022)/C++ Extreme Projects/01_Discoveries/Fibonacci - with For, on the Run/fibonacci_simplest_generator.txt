#include <fmt/ranges.h>
#include <ranges>
using namespace std;

auto fibonacci = []
{
	struct fib_it
	{
		using value_type = size_t;
		using difference_type = ptrdiff_t;
		using iterator_category = forward_iterator_tag;

		constexpr decltype(auto) operator* () const { return x; }
		constexpr decltype(auto) operator++ () { x = (y = x + y) - x; return *this; }
		constexpr decltype(auto) operator++ (int) { return ++ * this; }

	private:

		value_type x = 0, y = 1;
	};

	return ranges::subrange<fib_it, unreachable_sentinel_t>{};
}();

int main()
{
	fmt::print("{}", fibonacci | views::take(15));
}