#include <random>
#include <fmt/ranges.h>
#include <range/v3/range/conversion.hpp>
#include <range/v3/view.hpp>

auto random_number_generator() noexcept
{
	static auto gen = std::mt19937_64{ std::random_device{}() };
	static auto dist = std::uniform_int_distribution<size_t>{ 10,99 };
	return dist(gen);
}

int main()
{
	for (static constexpr auto limit = 20u; const auto _ : ranges::views::indices(limit))
	{
		auto v = ranges::views::generate_n(random_number_generator, limit) | ranges::to<std::vector>();
		auto i = ranges::views::indices(limit) | ranges::to<std::vector>();

		std::ranges::sort(i, {}, [&](const auto r) { return v[r]; });

		fmt::print("{}\n", i | ranges::views::transform([&](const auto r) { return v[r]; }));
	}
}