#include <fmt/ranges.h>
#include <algorithm>
#include <array>
using my_t = uint64_t;

constexpr auto is_prime(my_t x)
{
	for (auto i = x / 2; i > 1; --i)
		if (x % i == 0) return false;
	return true;
}

template <my_t N>
constexpr auto get_primes = []
{
	std::array<my_t, N> A{};
	std::ranges::generate(A, [m_current = 0]() mutable { while (!is_prime(++m_current)); return m_current; });
	return A;
}();

int main()
{
	constexpr auto my_primes = get_primes<7>;
}