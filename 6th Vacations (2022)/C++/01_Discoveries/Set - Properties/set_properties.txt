#include <fmt/ranges.h>
#include <range/v3/view.hpp>
#include <random>
#include <set>
namespace rg = ranges;
namespace vs = rg::views;

auto random_number_g() noexcept
{
	static auto my_engine = std::mt19937_64{ std::random_device{}() };
	return std::uniform_int_distribution<size_t>{ 10, 99 }(my_engine);
}

int main()
{
	for (constexpr auto limit = 20; const auto _ : vs::indices(limit))
	{
		auto my_set = vs::generate_n(random_number_g, limit) | rg::to<std::set>;
		fmt::print("{} - {}\n", my_set.size(), my_set);
	}
}