// ignore_for_file: constant_identifier_names, non_constant_identifier_names, curly_braces_in_flow_control_structures

import 'package:flutter/material.dart';
import 'dart:math' as math;
const my_title = Text("TheMR - Dice v5: Padding Fix");
const my_color = Colors.brown;
const my_space = Flexible(child: SizedBox(height: 10, width: 10));

void main() => runApp(MaterialApp(
  title: my_title.data as String,
  home: Scaffold(
    backgroundColor: my_color[400],
    appBar: AppBar(
      title: my_title,
      leading: const Icon(Icons.casino_sharp),
      backgroundColor: my_color[900],
    ),
    body: const ThePage(),
  ),
));

class ThePage extends StatelessWidget {
  const ThePage({Key? key}) : super(key: key);
  List _intelli_generate_die({final dice_n = 4}) {
    final m_sqr = math.sqrt(dice_n);
    final m_rnd = m_sqr.round();
    final m_mod = dice_n % m_rnd;
    final m_row = m_rnd - (m_sqr < m_rnd ? 1 : 0);
    final m_prf = m_sqr != m_rnd;
    final m_end = m_mod != 0 ? m_mod : m_rnd;
    final m_obj = Flexible(child: MyDice());

    var my_container = List.generate(m_row, (x) =>
        Flexible(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: List.generate(m_rnd, (y) => m_obj),
          ),
        )
    );
    if (m_prf)
      my_container.add(
          Flexible(
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: List.generate(m_end, (y) => m_obj),
            ),
          )
      );
    return my_container;
  }

  @override
  Widget build(BuildContext context) {
    const total_dice = 3;
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Flexible(
            child: Padding(
              padding: const EdgeInsets.all(18.0),
              child: ElevatedButton(
                // TODO: Roll all the Die
                onPressed: () {},
                style: ElevatedButton.styleFrom(
                  primary: my_color[800],
                ),
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Text("Roll 'em all!",
                    style: TextStyle(
                      color: my_color[50],
                      fontWeight: FontWeight.bold,
                      fontSize: 25,
                    ),
                  ),
                ),
              ),
            ),
          ),
          ..._intelli_generate_die(dice_n: total_dice),
        ],
      ),
    );
  }
}

class MyDice extends StatefulWidget {
  const MyDice({Key? key}) : super(key: key);
  @override
  State<MyDice> createState() => _MyDiceState();
}
class _MyDiceState extends State<MyDice> {
  int _dice_v = 1;

  @override
  Widget build(BuildContext context) {
    return TextButton(
      onPressed: () => setState(() => _dice_v = math.Random().nextInt(6) + 1),
      style: TextButton.styleFrom(
        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 18),
        primary: my_color[800],
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(0),
        ),
      ),
      child: Image.asset("img/Die/Mine/$_dice_v.png",
        color: my_color[900],
      ),
    );
  }
}
