#include <iostream>
using namespace std;


template<class T, class ...Ts>
concept any_of = disjunction<is_same<T, Ts>...>::value;

template<class T, class ...Ts>
concept convertible_in = disjunction<is_convertible<T, Ts>...>::value;

template<class ...Ts>
concept arithmatic = conjunction<is_arithmetic<Ts>...>::value;

template <class T>
concept self_2x = requires (T x) { x += x; };

template<class ...vars>
concept cout_able = requires { (cout << ... << vars{}); };

int main()
{

}