#include <iostream>
using namespace std;


template<typename Target, typename ...Ts>
concept convertible_in = disjunction_v<is_convertible<Target, Ts>...>;

auto Summer(const convertible_in<int, string_view> auto&... x)
{
	return (x + ...);
}

int main()
{
	// Integral
	cout << Summer(1, 2, 3, 4, 5, 6, 7, 8, 9) << endl;

	// Floating
	cout << Summer(1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9) << endl;

	// Mixed
	cout << Summer(1, 2, 3, 4, 5, 6.6, 7.7, 8.8, 9.9) << endl;

	// Invalid
	cout << Summer("Hello"s, ' ', "TheMR"s);
}