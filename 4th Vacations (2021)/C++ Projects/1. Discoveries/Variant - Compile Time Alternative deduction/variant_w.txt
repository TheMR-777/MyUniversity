#include <iostream>
#include <variant>
#include <vector>
using namespace std;


int main()
{
	// Initialization
	// --------------

	vector<variant<string_view, int, double>> W 
	{ 
		decltype(W)::value_type("TheMR"), 
		decltype(W)::value_type(77), 
		decltype(W)::value_type(12.5),
	};

	auto Print_All = [&W]
	{
		auto Print = [](const auto& elem)
		{
			// Type Extraction
			// ---------------

			using T = decay_t<decltype(elem)>;

			// Compile Time Type Deduction
			// ---------------------------

			if		constexpr (same_as<T, string_view>)	cout << "String: ";
			else if constexpr (same_as<T, int>)			cout << "Int   : ";
			else if constexpr (same_as<T, double>)		cout << "Double: ";
			else										cout << "INV   : ";

			// Original Arg
			// ------------

			cout << elem << '\n';
		};

		for (const auto& var : W)
		{
			visit(Print, var);
		}
	};

	// Printing

	Print_All();
}