#include <iostream>
#include <thread>

int main()
{
	// Initialization
	// --------------

	static constinit auto is_working = true;

	constexpr auto Job_1 = []() constexpr noexcept
	{
		while (is_working)
		{
			std::cout << "------------------------------------------------------------" << '\n';
		}
	};

	constexpr auto Job_2 = []() constexpr noexcept
	{
		while (is_working)
		{
			std::cout << "-----------------" << '\n';
		}
	};

	// Threading
	// ---------

	std::thread do_the_jobs[] = { std::thread(Job_1), std::thread(Job_2) };

	auto join_all = [&]<size_t... N>(std::index_sequence<N...>)
	{
		(do_the_jobs[N].join(), ...);
	};

	// Wait for the Input while Processing
	// -----------------------------------

	{
		std::cin.get();
		is_working = false;
	}

	// Joining the Thread
	// ------------------

	join_all(std::make_index_sequence<std::size(do_the_jobs)>());
	std::cout << "Finished Execution!" << '\n';
}